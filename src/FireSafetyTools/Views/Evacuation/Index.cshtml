@using System.Threading.Tasks
@using FireSafetyTools.Models.Tools.FireSafety.Evacuation
@model FireSafetyTools.ViewModels.Tools.FireSafety.Evacuation.EvacuationViewModel

@{
	ViewBag.Title = "Evacuation Modelling";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Second-Order Hydraulic Evacuation Model</h2>

@if (Model.Routes.Count == 0)
{
	<p>There is no routes</p>
	<p>To create a new route, click the Create New Route Button</p>
}

@foreach (var route in Model.Routes)
{
	<div class="accordion-container">
		<span class="accordion-toggle">@route.Value.First().Name</span>

		<div class="accordion-content">
			<div>
				<div class="panel panel-default panel-table">
					<div class="panel-heading">
						<div class="row">
							<div class="col col-xs-5">
								<h3 class="panel-title">List of route elements</h3>
							</div>
							<div class="col col-xs-7 text-right">
								<div class="dropdown" style="display: inline">
									<button id="dropDownMenu" class="btn btn-primary dropdown-toggle" style="position: relative; z-index: 1" type="button" data-toggle="dropdown">
										Add
										<span class="caret"></span>
									</button>
									<ul class="dropdown-menu">
										@foreach (var routeType in RouteTypeHelper.ListOfRouteTypes)
										{
											<li>@Html.ActionLink(routeType.Name, "CreateNewRouteElement", "Evacuation", new { routeTypeId = routeType.Id, routeId = route.Key }, null)</li>
										}
									</ul>
								</div>
								@Html.ActionLink("Edit", "EditRoute", "Evacuation", null, new { @class = "btn btn-danger btn-create", style = "position: relative; z-index: 1", data_toggle = "tooltip", data_container = "body", title = "Edit the current route" })
								@Html.ActionLink("Clear All", "ClearTable", "Evacuation", null, new { @class = "btn btn-warning btn-create", style = "position: relative; z-index: 1" })
							</div>
						</div>
					</div>
					<div class="panel-body">
						<table class="table table-striped table-bordered table-list">
							<thead>
								<tr>
									<th style="text-align: center; width: 50px ">#</th>
									<th style="text-align: left">Name</th>
									<th class="hidden-sm hidden-xs" style="text-align: center">Width</th>
									<th class="hidden-sm hidden-xs" style="text-align: center">Density</th>
									<th class="hidden-sm hidden-xs" style="text-align: center">Transition</th>
                                    <th style="text-align: center"><em class="fa fa-cog"></em></th>
								</tr>
							</thead>
							<tbody>

								@foreach (var routeElement in route.Value)
                                {
                                    if (routeElement.RouteElementId != 0)
                                    {
                                        <tr>
                                            <td id="phaseid" style="text-align: center">@routeElement.RouteElementId</td>
                                            <td class="hidden-xs" style="text-align: left">@routeElement.Name</td>
                                            <td class="hidden-sm hidden-xs" style="text-align: center">@Math.Round(routeElement.Width, 2) m</td>
                                            <td class="hidden-sm hidden-xs" style="text-align: center">@Math.Round(routeElement.Density, 2) p/m² </td>
                                            <td class="hidden-sm hidden-xs" style="text-align: center">@routeElement.TransitionType</td>
                                            <td style="text-align: center">
                                                <a href="@Url.Action("EditRouteElement", "Evacuation", new {id = routeElement.RouteElementId})" class="btn btn-sm btn-default" style="position: relative; z-index: 1"><span class="glyphicon glyphicon-pencil"></span></a>
                                                <a class="btn btn-sm btn-danger js-delete" style="position: relative; z-index: 1"><span class="glyphicon glyphicon-trash"></span></a>
                                            </td>
                                        </tr>
                                    }
                                }

							</tbody>
						</table>
					</div>

					<div class="panel-footer"> </div>
				</div>
			</div>
		</div>
	</div>
}

<div class="inline" style="margin-top: 30px; margin-bottom: 30px">

	@Html.ActionLink("Create Route", "CreateRoute", "Evacuation", null, new { @class = "btn btn-primary btn-create", style = "position: relative; z-index: 1" })

	@Html.ActionLink("Clear All Routes", "ClearTable", "Evacuation", null, new { @class = "btn btn-warning btn-create", style = "position: relative; z-index: 1"})

	@Html.ActionLink("Export to Excel", "ExportToExcel", "DesignFire", null, new { @class = "btn btn-danger" })
    
    @Html.ActionLink("Calculate", "CalculateRoutes", "Evacuation", null, new { @class = "btn btn-success" })

</div>  

<style>
	.accordion-container {
		margin: 30px 0 10px;
	}

	.accordion-toggle {
		position: relative;
		display: block;
		padding: 10px;
		font-size: 1.5em;
		font-weight: 300;
		background: #999;
		color: #fff;
		text-decoration: none;
	}

		.accordion-toggle.open, .accordion-toggle:hover {
			background: #333;
		}

		.accordion-toggle span.toggle-icon {
			position: absolute;
			top: 9px;
			right: 20px;
			font-size: 1.5em;
		}

	.accordion-content {
		display: none;
		padding: 0px;
		overflow: auto;
	}

	.panel-table .panel-body{
		padding: 0;
		min-height: 85px;
	}

	.panel-table .panel-body .table-bordered{
		border-style: none;
		margin:0;
	}

	.panel-table .panel-body .table-bordered > thead > tr > th:first-of-type {
		text-align:center;
		width: 100px;
	}

	.panel-table .panel-body .table-bordered > thead > tr > th:last-of-type,
	.panel-table .panel-body .table-bordered > tbody > tr > td:last-of-type {
		border-right: 0px;
	}

	.panel-table .panel-body .table-bordered > thead > tr > th:first-of-type,
	.panel-table .panel-body .table-bordered > tbody > tr > td:first-of-type {
		border-left: 0px;
	}

	.panel-table .panel-body .table-bordered > tbody > tr:first-of-type > td{
		border-bottom: 0px;
	}

	.panel-table .panel-body .table-bordered > thead > tr:first-of-type > th{
		border-top: 0px;
	}

	.panel-table .panel-footer .pagination{
		margin:0;
	}


	.panel-table .panel-footer .col{
		line-height: 34px;
		height: 34px;
	}

	.panel-table .panel-heading .col h3{
		line-height: 30px;
		height: 30px;
	}

	.panel-table .panel-body .table-bordered > tbody > tr > td{
		line-height: 34px;
	}

	.panel-default {
		border-radius: 0px;
	}

	.tooltip-inner {
		background-color: green;
}

	.tooltip.top .tooltip-arrow {
		border-top-color: green;
	}
</style>

@section scripts{
	<script>

        $(document).ready(function () {

            // create accordion variables
            var accordion = $(".accordion-toggle");
            var accordionContent = accordion.next('.accordion-content');

            accordion.toggleClass("open");
            accordionContent.slideToggle(250);

			$(".accordion-toggle").on("click", function (event) {
				event.preventDefault();

				// toggle accordion link open class
				accordion.toggleClass("open");
				// toggle accordion content
				accordionContent.slideToggle(250);

			});

			// Select all elements with data-toggle="tooltips" in the document
			$('[data-toggle="tooltip"]').tooltip({ container: "body" });
		});
	</script>
}