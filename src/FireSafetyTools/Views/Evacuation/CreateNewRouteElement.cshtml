@using FireSafetyTools.Models.Tools.FireSafety.Evacuation
@model FireSafetyTools.ViewModels.Tools.FireSafety.Evacuation.CreateRouteElementViewModel

@{
    ViewBag.Title = "Evacuation Modelling";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Create a new @RouteTypeHelper.GetRouteTypeName(Model.RouteTypeId)</h2>

@using (Html.BeginForm("SaveRouteElement", "Evacuation"))
{

    <div class="form-group" style="margin-top: 30px; margin-bottom: 30px;">
        @Html.LabelFor(d => d.Name)
        @Html.TextBoxFor(d => d.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(d => d.Name)
    </div>

    if (Model.RouteTypeId == RouteTypeHelper.Corridor || Model.RouteTypeId == RouteTypeHelper.Stairway ||
                            Model.RouteTypeId == RouteTypeHelper.WideConcourse)
    {
        <div class="form-group">
            @Html.LabelFor(d => d.Distance)
            @Html.TextBoxFor(d => d.Distance, new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.Distance)
        </div>
    }

    if (Model.RouteTypeId == RouteTypeHelper.Room)
    {
        <div class="form-group">
            @Html.Label("Average Distance [m]")
            @Html.TextBoxFor(d => d.Distance, new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.Distance)
        </div>
    }

    if (Model.RouteTypeId != RouteTypeHelper.Room)
    {
        <div class="form-group">
            @Html.LabelFor(d => d.Width)
            @Html.TextBoxFor(d => d.Width, new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.Width)
        </div>
    }


    if (Model.TransitionType == TransitionTypes.FirstRouteElement)
    {
        <div class="form-group">
            @Html.LabelFor(d => d.Density)
            @Html.TextBoxFor(d => d.Density, new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.Density)
        </div>
    }

    if (Model.RouteTypeId == RouteTypeHelper.Stairway)
    {
        <div class="form-group">
            @Html.LabelFor(d => d.StairwayType)
            @Html.DropDownListFor(d => d.StairwayType, new SelectList(StairwayTypes.ListOfStairTypes, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.StairwayType)
        </div>
    }

    if (Model.RouteTypeId == RouteTypeHelper.Corridor || Model.RouteTypeId == RouteTypeHelper.Stairway)
    {
        <div class="form-group" style="margin-top: 30px">
            @Html.CheckBoxFor(d => d.HasHandrails)
            @Html.Label("Does the " + @RouteTypeHelper.GetRouteTypeName(Model.RouteTypeId).ToLower() + " have handrails")
            @Html.ValidationMessageFor(d => d.StairwayType)
        </div>

        <div id="divStairway" class="form-group">
            @Html.LabelFor(d => d.DistanceFromWallToHandrail)
            @Html.TextBoxFor(d => d.DistanceFromWallToHandrail, new { @class = "form-control", disabled=true })
            @Html.ValidationMessageFor(d => d.DistanceFromWallToHandrail)
        </div>
    }


    @Html.TextBoxFor(d => d.RouteId, Model.RouteId.ToString(), new { @class = "hidden" })
    @Html.TextBoxFor(d => d.RouteTypeId, Model.RouteTypeId.ToString(), new { @class = "hidden" })
    @Html.TextBoxFor(d => d.TransitionType, Model.TransitionType.ToString(), new { @class = "hidden" })
    <button type="submit" class="btn btn-danger" style="margin-top: 20px">Save Route</button>
}

<style>
    ul.listoftextboxes {
        padding: 0px;
    }

    li.textboxblock, li.dropboxblock {
        display: inline-block;
        width: 280px;
        text-align: left;
        padding-left: 0px;
        margin-right: 30px;
    }

    li.textboxblock {
        height: 80px;
    }

    #clearline {
        clear: both;
    }
</style>

@section scripts{
    <script>

        $(document).ready(function () {

            $("#HasHandrails").change(function () {
                var isChecked = $(this).is(":checked");

                if (isChecked === true) {
                    $("#DistanceFromWallToHandrail").prop("disabled", false);
                }
                else {
                    $("#DistanceFromWallToHandrail").prop("disabled", true);
                }


            });


        })

    </script>
}

