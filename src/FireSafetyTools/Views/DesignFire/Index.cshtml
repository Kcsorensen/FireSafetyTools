@using System.Threading.Tasks
@using FireSafetyTools.Models.Tools.FireSafety.DesignFire
@model FireSafetyTools.ViewModels.Tools.FireSafety.DesignFire.DesignFireViewModel

@{
    ViewBag.Title = "CreationKit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Design Fire Creation Kit</h2>

@*<div id="divtable" style="margin-top: 30px">
    <table class="table table-hover">
        <tr style="border-bottom: 1px solid gray">
            <th>#</th>
            <th>Phase</th>
            <th>Duration</th>
            <th>Growth Rate</th>
            <th>Max Effect</th>
            <th>Total Energy</th>
        </tr>

        @foreach (var phase in Model.Phases)
        {
            <tr>
                <td>@phase.Id</td>
                <td>@phase.Name</td>
                <td>@phase.Duration s </td>
                <td>@phase.GrowthRateFactor</td>
                <td>@phase.TargetYq kW</td>
                <td>@phase.TotalEnergyReleased MJ</td>
            </tr>
        }

    </table>
</div>*@

<div class="col-md-12" style="margin-top: 30px">
    <div class="panel panel-default panel-table">
        <div class="panel-heading">
            <div class="row">
                <div class="col col-xs-6">
                    <h3 class="panel-title">List of Phases</h3>
                </div>
                <div class="col col-xs-6 text-right">
                    <button type="button" class="btn btn-sm btn-primary btn-create">Create New</button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-bordered  table-list">
                <thead>
                    <tr>
                        <th style="text-align: center">#</th>
                        <th style="text-align: left">Phase</th>
                        <th style="text-align: center">Duration</th>
                        <th style="text-align: center">Growth Rate</th>
                        <th style="text-align: center">Max Effect</th>
                        <th style="text-align: center">Total Energy</th>
                        <th style="text-align: center"><em class="fa fa-cog"></em></th>
                    </tr>
                </thead>
                <tbody>
                
                    @foreach (var phase in Model.Phases)
                    {
                        <tr>
                            <td style="text-align: center">@phase.Id</td>
                            <td style="text-align: left">@phase.Name</td>
                            <td style="text-align: center">@phase.Duration s </td>
                            <td style="text-align: center">@phase.GrowthRateFactor</td>
                            <td style="text-align: center">@phase.TargetYq kW</td>
                            <td style="text-align: center">@phase.TotalEnergyReleased MJ</td>
                            <td style="text-align: center">
                                <a class="btn btn-default"><i class="fa fa-pencil"></i></a>
                                <a class="btn btn-danger"><em class="fa fa-trash"></em></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

        </div>
        <div class="panel-footer">
            <div class="row">
                <div class="col col-xs-4">
                    Page 1 of 1
                </div>
                <div class="col col-xs-8">
                    <ul class="pagination hidden-xs pull-right">
                        <li><a href="#">1</a></li>
                    </ul>
                    <ul class="pagination visible-xs pull-right">
                        <li><a href="#">«</a></li>
                        <li><a href="#">»</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="inline" style="position: relative;">


    <div class="dropup" style="display: inline;" id="PhaseTypeId" Name="PhaseTypeIdId">
        <button id="dropUpMenu" class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
            Add a Phase
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.GrowthKnownDurationAndGrowthRate).Name, "New", "DesignFire", new { id = PhaseType.GrowthKnownDurationAndGrowthRate }, null)</li>
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.GrowthKnownDurationAndTargetEffect).Name, "New", "DesignFire", new { id = PhaseType.GrowthKnownDurationAndTargetEffect }, null)</li>
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.GrowthKnownTargetEffectAndGrowthRate).Name, "New", "DesignFire", new { id = PhaseType.GrowthKnownTargetEffectAndGrowthRate }, null)</li>
            <li role="separator" class="divider"></li>
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.SteadyKnownDuration).Name, "New", "DesignFire", new { id = PhaseType.SteadyKnownDuration }, null)</li>
            <li role="separator" class="divider"></li>
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.DecayKnownDurationAndGrowthRate).Name, "New", "DesignFire", new { id = PhaseType.DecayKnownDurationAndGrowthRate }, null)</li>
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.DecayKnownDurationAndTargetEffect).Name, "New", "DesignFire", new { id = PhaseType.DecayKnownDurationAndTargetEffect }, null)</li>
            <li>@Html.ActionLink(Model.PhaseTypes.Single(d => d.Id == PhaseType.DecayKnownTargetEffectAndGrowthRate).Name, "New", "DesignFire", new { id = PhaseType.DecayKnownTargetEffectAndGrowthRate }, null)</li>
        </ul>
    </div>

    <div id="xaxis" class="hidden" data-chart="@Model.XAxis"></div>
    <div id="yaxis" class="hidden" data-chart="@Model.YAxis"></div>
    
    @Html.ActionLink("Clear", "ClearTable", "DesignFire", null, new { @class = "btn btn-warning" })
    <button class="btn btn-danger" type="button" style="display: inline">Export</button>

</div>

<div id="myDiv" style="height: 400px;"></div>

<style>
    
    .panel-table .panel-body{
        padding:0;
        height: 500px;
    }

    .panel-table .panel-body .table-bordered{
        border-style: none;
        margin:0;
    }

    .panel-table .panel-body .table-bordered > thead > tr > th:first-of-type {
        text-align:center;
        width: 100px;
    }

    .panel-table .panel-body .table-bordered > thead > tr > th:last-of-type,
    .panel-table .panel-body .table-bordered > tbody > tr > td:last-of-type {
      border-right: 0px;
    }

    .panel-table .panel-body .table-bordered > thead > tr > th:first-of-type,
    .panel-table .panel-body .table-bordered > tbody > tr > td:first-of-type {
      border-left: 0px;
    }

    .panel-table .panel-body .table-bordered > tbody > tr:first-of-type > td{
      border-bottom: 0px;
    }

    .panel-table .panel-body .table-bordered > thead > tr:first-of-type > th{
      border-top: 0px;
    }

    .panel-table .panel-footer .pagination{
      margin:0; 
    }


    .panel-table .panel-footer .col{
     line-height: 34px;
     height: 34px;
    }

    .panel-table .panel-heading .col h3{
     line-height: 30px;
     height: 30px;
    }

    .panel-table .panel-body .table-bordered > tbody > tr > td{
      line-height: 34px;
    }
   

    /*div.inline {
         margin-top: 30px;
     }

    table {
        padding: 20px;
    }

    table tr {
            
    }

    #divtable {
        height: 500px;
        border-bottom: 1px solid gray;
        border-top: 1px solid gray;
    }*/
</style>

@section scripts {
    <script src="~/lib/plotly.js-1.21.2/dist/plotly.min.js"></script>
    <script>

        $(document).ready(function () {

            var xAxisData = JSON.parse($("#xaxis").attr("data-chart"));
            var yAxisData = JSON.parse($("#yaxis").attr("data-chart"));


            var trace1 = {
                x: xAxisData,
                y: yAxisData,
                fill: 'tozeroy',
                type: 'scatter'
            };

            var data = [trace1];

            Plotly.newPlot('myDiv', data);

        });

    </script>
}

